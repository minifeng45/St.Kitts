end_day = "2020/03/23",
including.period = 30,divided.period  = 7)
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/23",
including.period = 30,divided.period  = 7)
month_temp
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2)
devtools::source_url("https://raw.githubusercontent.com/supermonk00/St.Kitts/master/SP_Trial/SP_PivotTable_report.R")
library(devtools)
devtools::source_url("https://raw.githubusercontent.com/supermonk00/St.Kitts/master/SP_Trial/SP_Data_insert.R")
library(readxl)
###################################################
#################PARAMATER CHANGE##################
###################################################
harvest_day = c("11/11","11/18","11/25","12/2",
"12/9","12/16","12/23","12/31",
"01/06","01/13","01/21","01/27",
"02/02","02/11","02/18","02/24",
"03/02","03/09","03/16","03/23")
#insert data before TRIM treatment
purple_before_trim = read_excel("~/Desktop//academy/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Purple")
#insert data before TRIM treatment
purple_before_trim = read_excel("~/Desktop/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Purple")
red_before_trim = read_excel("~/Desktop/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Red")
#insert data after TRIM treatment
purple_trim = read_excel("~/Desktop/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Purple(trim)")
purple_notrim = read_excel("~/Desktop/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Purple(notrim)")
red_trim = read_excel("~/Desktop/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Red(trim)")
red_notrim = read_excel("~/Desktop/programing/R/St.Kitts/SP_Trial/甜椒田間試驗數據.xlsx",
sheet = "Red(notrim)")
source("R/St.Kitts/WS_reg/WS.average_temperature.R")
source("~St.Kitts/WS_reg/WS.average_temperature.R")
source("~/St.Kitts/WS_reg/WS.average_temperature.R")
?source
getwd()
library(ggplot2)
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop//programing/R/St.Kitts/WS_reg/St.Kitts/SP_Trial/SP_PivotTable_report.R")
source("/Users/supermonk00/Desktop//programing/R/St.Kitts/WS_reg/St.Kitts/SP_Trial/SP_PivotTable_report.R")
getwd()
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/St.Kitts/SP_Trial/SP_PivotTable_report.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
source("~/R/St.Kitts/WS_reg/WS.average_temperature.R")
/Users/supermonk00/Desktop/programing
/Users/supermonk00/Desktop/programing
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_Data_insert.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/23",
including.period = 30,divided.period  = 7)
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2)
Week
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/23",
including.period = 30,divided.period  = 7)
month_temp
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/22",
including.period = 30,divided.period  = 7)
# insert temperature data, replicate for two variety
temperature = rep(c(month_temp[,1]),2)
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2)
### reform to the plot-acceptable dataframe
Variety = rep("Purple",length(Harvest$Date))
month_temp
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/22",
including.period = 30,divided.period  = 7)
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/22",
including.period = 30,divided.period  = 7)
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/22",
including.period = 30,divided.period  = 7)
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/WS_reg/WS.average_temperature.R")
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/22",
including.period = 30,divided.period  = 7)
month_temp
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/22",
including.period = 30,divided.period  = 7)
temperature
month_temp
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/23",
including.period = 30,divided.period  = 7)
# insert temperature data, replicate for two variety
temperature = rep(c(month_temp$temperature.average,2))
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2)
### reform to the plot-acceptable dataframe
Variety = rep("Purple",length(Harvest$Date))
Weight = Harvest$Purple_weight
purple = data.frame(Weight,Variety)
Variety = rep("Red",length(Harvest$Date))
Weight = Harvest$Red_weight
red = data.frame(Weight,Variety)
rm(Weight,Variety)
# tidy up to an intergated dataframe #
dat = data.frame(Week,rbind(purple,red))
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)", breaks = c(Week))+
ggtitle("Sweet Pepper Harvest Overall")
p
temperature
# insert temperature data, replicate for two variety
temperature = rep(c(month_temp$temperature.average,2))
temperature
# insert temperature data, replicate for two variety
temperature = rep(c(month_temp$temperature.average),2)
temperature
source("/Users/supermonk00/Desktop/programing/R/St.Kitts/SP_Trial/SP_PivotTable_report.R")
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2)
Week
### reform to the plot-acceptable dataframe
Variety = rep("Purple",length(Harvest$Date))
Weight = Harvest$Purple_weight
purple = data.frame(Weight,Variety)
Variety = rep("Red",length(Harvest$Date))
Weight = Harvest$Red_weight
red = data.frame(Weight,Variety)
rm(Weight,Variety)
# tidy up to an intergated dataframe #
dat = data.frame(Week,rbind(purple,red))
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)", breaks = c(Week))+
ggtitle("Sweet Pepper Harvest Overall")
p
library(dplyr)
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2) %>%
as.factor()
Week
### reform to the plot-acceptable dataframe
Variety = rep("Purple",length(Harvest$Date))
Weight = Harvest$Purple_weight
purple = data.frame(Weight,Variety)
Variety = rep("Red",length(Harvest$Date))
Weight = Harvest$Red_weight
red = data.frame(Weight,Variety)
rm(Weight,Variety)
# tidy up to an intergated dataframe #
dat = data.frame(Week,rbind(purple,red))
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)", breaks = c(Week))+
ggtitle("Sweet Pepper Harvest Overall")
p
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_date(name = "Week(2019/11/11-2020/03/23)")+
ggtitle("Sweet Pepper Harvest Overall")
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)")+
ggtitle("Sweet Pepper Harvest Overall")
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)")+
ggtitle("Sweet Pepper Harvest Overall")
p
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
ggtitle("Sweet Pepper Harvest Overall")
p
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
p
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
ggtitle("Sweet Pepper Harvest Overall")
p
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
ggtitle("Sweet Pepper Harvest Overall")
p
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)", breaks = c(Week))+
ggtitle("Sweet Pepper Harvest Overall")
p
?geom_line
#### (lead in the temperature information)
month_temp = Dailytemperature_calculate(
filename = "Needsmust.csv",
start_day = "2019/10/11",
end_day = "2020/03/23",
including.period = 30,divided.period  = 7)
# insert temperature data, replicate for two variety
temperature = rep(c(month_temp$temperature.average),2)
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2) %>%
### reform to the plot-acceptable dataframe
Variety = rep("Purple",length(Harvest$Date))
Weight = Harvest$Purple_weight
purple = data.frame(Weight,Variety)
Variety = rep("Red",length(Harvest$Date))
Weight = Harvest$Red_weight
red = data.frame(Weight,Variety)
rm(Weight,Variety)
# tidy up to an intergated dataframe #
dat = data.frame(Week,rbind(purple,red))
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)", breaks = c(Week))+
ggtitle("Sweet Pepper Harvest Overall")
lm_p = summary(lm(Harvest$Purple_weight~month_temp[,1]))
p
### set the week data, replicate for two variety
Week = rep(c(1:length(Harvest$Date)),2)
### reform to the plot-acceptable dataframe
Variety = rep("Purple",length(Harvest$Date))
Weight = Harvest$Purple_weight
purple = data.frame(Weight,Variety)
Variety = rep("Red",length(Harvest$Date))
Weight = Harvest$Red_weight
red = data.frame(Weight,Variety)
rm(Weight,Variety)
# tidy up to an intergated dataframe #
dat = data.frame(Week,rbind(purple,red))
# set plot, x-axis
p = ggplot(data = dat, aes(x = Week))
# draw barchart
p = p + geom_bar(aes(y= Weight,fill = Variety),
stat = "identity",
position="dodge",
width = 0.5)+
scale_fill_manual(values = c("purple", "red"))
ylim.prim <- c(0, 100000)   # in this example, precipitation
ylim.sec <- c(25, 30)    # in this example, temperature
# linear transformation
b <- diff(ylim.prim)/diff(ylim.sec)
a <- b*(ylim.prim[1] - ylim.sec[1])
# draw linegraph
p = p +
geom_line(aes(y = a+temperature*b))+
geom_point(aes(y = a+temperature*b))+
theme(axis.title.y = element_text(vjust = 1,size = 15),
axis.title.x = element_text(size = 15))+
scale_y_continuous(name = "Weight(g)",
sec.axis = sec_axis(~(.-a)/b ,name ="Temperature(°C)"))+ #set second axis
scale_x_continuous(name = "Week(2019/11/11-2020/03/23)", breaks = c(Week))+
ggtitle("Sweet Pepper Harvest Overall")
lm_p = summary(lm(Harvest$Purple_weight~month_temp[,1]))
p
lm_p = summary(lm(Harvest$Purple_weight~month_temp$temperature.average))
plot(month_temp$temperature.average, Harvest$Purple_weight,pch=".",cex= 5,
ylab = "Weekly harvest(g)",
xlab = "Monthly temperature average before harvest",
main = "Linear regression of harvest~temperature(Purple)")
abline(lm_p, col = "purple")
text(29,70000,as.expression(substitute(italic(adj.R)^2 == r, list(r = round(lm_p$adj.r.squared,
3)))))
lm_r = summary(lm(Harvest$Red_weight~month_temp$temperature.average))
# 'cause R-squared (Red) is low, strech the loess line
loes = loess(Harvest$Red_weight~month_temp$temperature.average)
smoothed <- predict(loes)
plot(month_temperature, Harvest$Red_weight)
lm_r = summary(lm(Harvest$Red_weight~month_temp$temperature.average))
# 'cause R-squared (Red) is low, strech the loess line
loes = loess(Harvest$Red_weight~month_temp$temperature.average)
smoothed <- predict(loes)
plot(month_temp$temperature.average, Harvest$Red_weight)
abline(lm_r, col = "red")
lines(smoothed, x=month_temp[,1], col="grey")
text(29,20000,as.expression(substitute(italic(adj.R)^2 == r, list(r = round(lm_r$adj.r.squared,
3)))))
lines(smoothed, x=month_temp$temperature.average, col="grey")
text(29,20000,as.expression(substitute(italic(adj.R)^2 == r, list(r = round(lm_r$adj.r.squared,
3)))))
Variety = rep("Purple",length(purple_total$Date))
Weight = purple_total$`Weight(g)`
purple = data.frame(Weight,Variety)
Variety = rep("Red",length(red_total$Date))
Weight = red_total$`Weight(g)`
red = data.frame(Weight,Variety)
dat = data.frame(rbind(purple,red))
box = ggplot(dat,aes(x = Variety, y=Weight,fill=Variety))+
geom_boxplot()+
scale_fill_manual(values = c("purple", "red"))+
ggtitle("Boxplot: Fruit Weight Distribution")+
ylab("Fruit weight(g)")
rm(box)
box = ggplot(dat,aes(x = Variety, y=Weight,fill=Variety))+
geom_boxplot()+
scale_fill_manual(values = c("purple", "red"))+
ggtitle("Boxplot: Fruit Weight Distribution")+
ylab("Fruit weight(g)")
box
dat = rbind(purple_notrim,purple_trim)
Treatment =c(rep("notrim",nrow(purple_notrim)),rep("trim",nrow(purple_trim)))
data = data_frame(weight = dat$`Weight(g)`,trt = Treatment)
# boxplot show the trim/notrim(purple) distribution
p = ggplot(data = data, aes(x = trt))
dat = rbind(purple_notrim,purple_trim)
dat
