library(RMySQL)
library(DBI)
library(dplyr)
library(readxl)
conn<-dbConnect(MySQL(),dbname="TomatoTrial",user="root",
password="12345678",host="localhost")
dbListTables(conn)
#dim
HA3080.harvest = Tyranus.harvest = Farmer933.harvest = MEIHUI.harvest = data.frame()
Harvest = data.frame()
for (i in 1:length(dbListTables(conn))) {
Harvest = data.frame(rbind(Harvest,dbReadTable(conn,name =dbListTables(conn)[i])))
}
Harvest
Harvest %>%
group_by(Variety)%>%
summarize(total = sum(Weight),
average =mean(Weight),
sd.avr = sd(Weight))
getwd()
setwd("/Users/supermonk00/Desktop/programing/R/St.Kitts/Tomato_Trial")
plant.number = read_excel("Desktop/Tomato.Trial_Plant_number.xlsx")
plant.number = read_excel("/Users/supermonk00/Desktop/programing/R/St.Kitts/Tomato_Trial/Tomato.Trial_Plant_number.xlsx")
plant.number
ymd(plant.number$Update_date)
library(lubridate)
ymd(plant.number$Update_date)
plant_number_0427  = plant.number %>%
filter(ymd(Update_date) < ymd("2020-04-28"))
plant_number_0427
for (i in 1:length(dbListTables(conn))) {
Harvest = data.frame(rbind(Harvest,dbReadTable(conn,name =dbListTables(conn)[i])))
}
plant_number_0502  = plant.number %>%
filter(ymd(Update_date) > ymd("2020-04-28"), ymd(Update_date) <= ymd("2020-05-02"))
plant_number_0502
plant_number_0427$Update_date
plant_number_0502$Update_date
plant_number_0505  = plant.number %>%
filter(ymd(Update_date) > ymd("2020-05-02"))
plant_number_0505$Update_date
library(readxl)
library(RMySQL)
library(DBI)
library(dplyr)
conn<-dbConnect(MySQL(),dbname="TomatoTrial",user="root",
password="12345678",host="localhost")
dbSendQuery(conn,'SET NAMES utf8')
dbGetQuery(conn,"SET GLOBAL local_infile=1")
data_record = function(Variety){
Variety <- read_excel("~/Desktop/Tomato inspection/Greenhouse/Harvest.xlsx",
sheet = deparse(substitute(Variety)))
Variety = Variety[-1]
for (i in 1:(nrow(Variety)-1)){
Variety$Replicate[which(is.na(Variety$Replicate))] = Variety$Replicate[which(is.na(Variety$Replicate))-1]
Variety$Date[i+1] = Variety$Date[1]
Variety$Variety[i+1] = Variety$Variety[1]
}
Variety$Date = lubridate::ymd(Variety$Date)%>%
gsub("-","/",.)
code = lubridate::ymd(Variety$Date[1]) %>%
gsub("-","/",.) %>%
gsub("/","",.)
return(list(Variety,code))
}
for (i in 1:4) {
if (i ==1) {
data = data_record(HA3080)
DBI::dbWriteTable(conn, paste("HA3080",data[[2]],sep = "_"), data[[1]], overwrite = T)
dbGetQuery(conn,paste("ALTER TABLE `HA3080_",data[[2]],"` CHANGE COLUMN `row_names` `NO.` INT NOT NULL ,ADD PRIMARY KEY (`NO.`)",sep = ""))
print(DBI::dbWriteTable(conn, paste("HA3080",data[[2]],sep = "_"), data[[1]], overwrite = T))
}
if (i ==2){
data = data_record(Tyranus)
DBI::dbWriteTable(conn, paste("Tyranus",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("Tyranus",data[[2]],sep = "_"), data[[1]], overwrite = T))
}
if (i ==3){
data = data_record(Farmer933)
DBI::dbWriteTable(conn, paste("Farmer933",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("Farmer933",data[[2]],sep = "_"), data[[1]], overwrite = T))
}
if (i ==4){
data = data_record(MEIHUI)
DBI::dbWriteTable(conn, paste("MEIHUI",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("MEIHUI",data[[2]],sep = "_"), data[[1]], overwrite = T))
}
}
if (i ==3){
data = data_record(Farmer933)
DBI::dbWriteTable(conn, paste("Farmer933",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("Farmer933",data[[2]],sep = "_"), data[[1]], overwrite = T))
}
if (i ==4){
data = data_record(MEIHUI)
DBI::dbWriteTable(conn, paste("MEIHUI",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("MEIHUI",data[[2]],sep = "_"), data[[1]], overwrite = T))
}
data = data_record(MEIHUI)
DBI::dbWriteTable(conn, paste("MEIHUI",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("MEIHUI",data[[2]],sep = "_"), data[[1]], overwrite = T))
data = data_record(Farmer933)
DBI::dbWriteTable(conn, paste("Farmer933",data[[2]],sep = "_"), data[[1]], overwrite = T)
print(DBI::dbWriteTable(conn, paste("Farmer933",data[[2]],sep = "_"), data[[1]], overwrite = T))
data = data_record(HA3080)
DBI::dbWriteTable(conn, paste("HA3080",data[[2]],sep = "_"), data[[1]], overwrite = T)
dbGetQuery(conn,paste("ALTER TABLE `HA3080_",data[[2]],"` CHANGE COLUMN `row_names` `NO.` INT NOT NULL ,ADD PRIMARY KEY (`NO.`)",sep = ""))
print(DBI::dbWriteTable(conn, paste("HA3080",data[[2]],sep = "_"), data[[1]], overwrite = T))
library(RMySQL)
library(DBI)
library(dplyr)
library(readxl)
library(lubridate)
conn<-dbConnect(MySQL(),dbname="TomatoTrial",user="root",
password="12345678",host="localhost")
harvest.times  = length(dbListTables(conn))/4
replicates = 5
Harvest = data.frame()
for (i in 1:length(dbListTables(conn))) {
Harvest = data.frame(rbind(Harvest,dbReadTable(conn,name =dbListTables(conn)[i])))
}
Rough.summary <- Harvest %>%
group_by(Variety)%>%
summarize(total = sum(Weight),
average =mean(Weight),
sd.avr = sd(Weight))
plant.number = read_excel("/Users/supermonk00/Desktop/programing/R/St.Kitts/Tomato_Trial/Tomato.Trial_Plant_number.xlsx")
Harvest_before.0502=plant.number %>%
filter(ymd(Update_date) == ymd("2020-04-27")) %>%
right_join(Harvest, by=c("Replicate","Variety")) %>%
filter(ymd(Date) <=  ymd("2020-05-02"))
Harvest_before.0505=plant.number %>%
filter(ymd(Update_date) == ymd("2020-05-02")) %>%
right_join(Harvest, by=c("Replicate","Variety")) %>%
filter(ymd(Date) <=  ymd("2020-05-05"),ymd(Date) >  ymd("2020-05-02"))
Harvest_after.0505=plant.number %>%
filter(ymd(Update_date) == ymd("2020-05-05")) %>%
right_join(Harvest, by=c("Replicate","Variety")) %>%
filter(ymd(Date) >  ymd("2020-05-05"))
Harvesy.final = rbind(Harvest_before.0502,Harvest_before.0505,Harvest_after.0505)
Harvesy.final %>%
group_by(Variety)%>%
summarize(total = sum(Weight/Plant_number),
fruit.number.per.plant = length(NO.)/harvest.times/replicates,
avr.fruit.weight = total/(length(NO.)))%>%
mutate(avr.total.weight = fruit.number.per.plant*avr.fruit.weight)
Harvesy.final %>%
group_by(Replicate,Variety) %>%
arrange(desc(total))
Harvesy.final %>%
group_by(Replicate,Variety) %>%
arrange(desc(total))
Harvesy.final = rbind(Harvest_before.0502,Harvest_before.0505,Harvest_after.0505)
Harvesy.final
Rough.summary
